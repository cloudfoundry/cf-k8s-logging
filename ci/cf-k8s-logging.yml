resource_types:
- name: pull-request
  type: docker-image
  source:
    repository: teliaoss/github-pr-resource
# TODO: remove this and revert back to using `registry-image` after Concourse has been upgraded
# We are relying on this to ensure there is a `repository` file in the image resource which is used for certain tasks
- name: registry-image-latest
  type: registry-image
  source:
    repository: concourse/registry-image-resource
    tag: 1.2.1

resources:
- name: runtime-ci
  type: git
  icon: github
  source:
    branch: main
    uri: https://github.com/cloudfoundry/runtime-ci.git

- name: cf-for-k8s-ci
  type: git
  icon: github
  source:
    uri: git@github.com:cloudfoundry/cf-for-k8s
    branch: develop
    private_key: ((cf_for_k8s_readonly_deploy_key.private_key))
    paths:
    - ci/**

- name: ready-pool
  type: pool
  icon: pool
  source:
    uri: git@github.com:cloudfoundry/relint-ci-pools
    branch: main
    pool: k8s-dev/ready
    private_key: ((relint_ci_pools_readwrite_deploy_key.private_key))

- name: destroy-pool
  type: pool
  icon: pool
  source:
    uri: git@github.com:cloudfoundry/relint-ci-pools
    branch: main
    pool: k8s-dev/destroy
    private_key: ((relint_ci_pools_readwrite_deploy_key.private_key))

- name: fluentd-syslog
  type: git
  source:
    branch: main
    uri: git@github.com:cloudfoundry/fluent-plugin-syslog_rfc5424
    private_key: ((cf-loggregator-oauth-bot-key))

- name: fluentd-syslog-push
  type: git
  source:
    branch: main
    uri: git@github.com:cloudfoundry/fluent-plugin-syslog_rfc5424
    private_key: ((cf-loggregator-oauth-bot-key))

- name: cf-for-k8s-develop
  type: git
  source:
    branch: develop
    uri: git@github.com:cloudfoundry/cf-for-k8s
    private_key: ((cf-loggregator-oauth-bot-key))

- name: cf-k8s-logging-main
  type: git
  source:
    branch: main
    uri: git@github.com:cloudfoundry/cf-k8s-logging
    private_key: ((cf-loggregator-oauth-bot-key))
    ignore_paths:
    - ci
    - version

- name: cf-k8s-logging-ci
  type: git
  source:
    branch: main
    uri: git@github.com:cloudfoundry/cf-k8s-logging
    private_key: ((cf-loggregator-oauth-bot-key))
    paths:
    - ci/**

- name: log-cache-image
  type: registry-image-latest
  source:
    repository: cloudfoundry/log-cache
    username: ((dockerhub.username))
    password: ((dockerhub.password))
    tag: latest

- name: log-cache-gateway-image
  type: registry-image-latest
  source:
    repository: cloudfoundry/log-cache-gateway
    username: ((dockerhub.username))
    password: ((dockerhub.password))
    tag: latest

- name: log-cache-cf-auth-proxy-image
  type: registry-image-latest
  source:
    repository: cloudfoundry/log-cache-cf-auth-proxy
    username: ((dockerhub.username))
    password: ((dockerhub.password))
    tag: latest

- name: syslog-server-image
  type: registry-image-latest
  source:
    repository: cloudfoundry/syslog-server
    username: ((dockerhub.username))
    password: ((dockerhub.password))
    tag: latest

- name: cf-k8s-logging-image
  type: registry-image-latest
  source:
    repository: cloudfoundry/cf-k8s-logging
    username: ((dockerhub.username))
    password: ((dockerhub.password))
    tag: latest

- name: cf-k8s-logging-github-release
  type: github-release
  source:
    owner: cloudfoundry
    drafts: true
    repository: cf-k8s-logging
    access_token: ((logging-github-access-token))

- name: cf-k8s-logging-pr
  type: pull-request
  source:
    access_token: ((logging-github-access-token))
    repository: cloudfoundry/cf-k8s-logging
    disable_forks: true

- name: cf-k8s-logging-version
  type: semver
  source:
    driver: git
    uri: git@github.com:cloudfoundry/cf-k8s-logging.git
    branch: main
    private_key: ((cf_k8s_logging_readwrite_deploy_key.private_key))
    git_user: "relint-ci <cf-release-integration@pivotal.io>"
    file: version
    initial_version: 0.8.0

jobs:
  - name: test-ruby-plugin
    public: true
    plan:
      - get: fluentd-syslog
        trigger: true
      - task: run-tests
        config:
          image_resource:
            type: registry-image
            source: { repository: ruby, tag: 2.7 }
          platform: linux
          inputs:
          - name: fluentd-syslog
          run:
            path: /bin/bash
            args:
              - -ec
              - |
                cd fluentd-syslog
                bundle install
                bundle exec rake test
  - name: bump-gem-version
    public: true
    plan:
    - get: fluentd-syslog
      trigger: true
      passed: ["test-ruby-plugin"]
    - task: gem-bump-version
      config:
        image_resource:
          type: registry-image
          source: { repository: ruby, tag: 2.7 }
        platform: linux
        inputs:
        - name: fluentd-syslog
        outputs:
        - name: fluentd-syslog-commited
          path: fluentd-syslog
        run:
          path: /bin/bash
          args:
          - -ec
          - |
            git config --global user.email "cf-loggregator@pivotal.io"
            git config --global user.name "Log Egress CI"

            cd fluentd-syslog
            gem install gem-release
            gem bump -v rc --skip-ci
    - put: fluentd-syslog-push
      params:
        repository: fluentd-syslog-commited

  - name: release-gem
    public: true
    plan:
    - get: fluentd-syslog-push
      trigger: true
      passed: ["bump-gem-version"]

    - task: release-gem
      config:
        image_resource:
          type: registry-image
          source: { repository: ruby, tag: 2.7 }
        platform: linux
        inputs:
        - name: fluentd-syslog-push
        params:
          API_KEY: ((logging-gem-api-key))
        run:
          path: /bin/bash
          args:
          - -ec
          - |
            cd fluentd-syslog-push
            mkdir ~/.gem
            echo $API_KEY > ~/.gem/credentials
            chmod 0600 ~/.gem/credentials
            bundle install
            gem build fluent-plugin-syslog_rfc5424
            gem push *.gem

  - name: run-tests-on-cf-for-k8s-pr
    public: true
    plan:
    - get: cf-k8s-logging
      resource: cf-k8s-logging-pr
      params:
        integration_tool: checkout
      trigger: true
      version: every

    - put: cf-k8s-logging-pr
      params:
        path: cf-k8s-logging
        status: pending
        context: tests
      get_params:
        integration_tool: checkout

    - try:
        do:
        - do: &test-cf-k8s
          - in_parallel:
            - get: runtime-ci
            - get: cf-for-k8s-develop
            - get: cf-k8s-logging-ci
            - get: cf-for-k8s-ci

          - task: rev-parse
            input_mapping:
              cf-k8s-logging: cf-k8s-logging-ci
            config:
              platform: linux
              image_resource:
                type: registry-image
                source:
                  repository: cloudfoundry/cf-for-k8s-ci
              inputs:
              - name: cf-k8s-logging
              outputs:
              - name: labels
              run:
                path: /bin/bash
                args:
                - -c
                - |
                  set -e

                  git_sha="$(cat cf-k8s-logging/.git/ref)"

                  cat << EOF > labels/labels
                  org.opencontainers.image.source=https://github.com/cloudfoundry/cf-k8s-logging
                  org.opencontainers.image.revision=${git_sha}
                  EOF

          - in_parallel:
            - do:
              - task: build-log-cache-image
                privileged: true
                output_mapping:
                  image: log-cache-image-tarball
                config: &build-cf-k8s-logging-images
                  platform: linux
                  image_resource:
                    type: registry-image
                    source:
                      repository: vito/oci-build-task
                  inputs:
                    - name: cf-k8s-logging
                    - name: labels
                  outputs:
                    - name: image
                  params:
                    CONTEXT: ~
                    DOCKERFILE: ~
                    LABELS_FILE: ~
                  run:
                    path: build
                params:
                  CONTEXT: cf-k8s-logging/vendor/log-cache/src
                  DOCKERFILE: cf-k8s-logging/vendor/log-cache/src/cmd/log-cache/Dockerfile
                  LABELS_FILE: labels/labels
              - put: log-cache-image
                params:
                  image: log-cache-image-tarball/image.tar

            - do:
              - task: build-log-gateway-image
                privileged: true
                output_mapping:
                  image: log-gateway-image-tarball
                config: *build-cf-k8s-logging-images
                params:
                  CONTEXT: cf-k8s-logging/vendor/log-cache/src
                  DOCKERFILE: cf-k8s-logging/vendor/log-cache/src/cmd/gateway/Dockerfile
                  LABELS_FILE: labels/labels
              - put: log-cache-gateway-image
                params:
                  image: log-gateway-image-tarball/image.tar

            - do:
              - task: build-log-cache-cf-auth-proxy-image
                privileged: true
                output_mapping:
                  image: log-cache-cf-auth-proxy-image-tarball
                config: *build-cf-k8s-logging-images
                params:
                  CONTEXT: cf-k8s-logging/vendor/log-cache/src
                  DOCKERFILE: cf-k8s-logging/vendor/log-cache/src/cmd/cf-auth-proxy/Dockerfile
                  LABELS_FILE: labels/labels
              - put: log-cache-cf-auth-proxy-image
                params:
                  image: log-cache-cf-auth-proxy-image-tarball/image.tar

            - do:
              - task: build-syslog-server-image
                privileged: true
                output_mapping:
                  image: syslog-server-image-tarball
                config: *build-cf-k8s-logging-images
                params:
                  CONTEXT: cf-k8s-logging/vendor/log-cache/src
                  DOCKERFILE: cf-k8s-logging/vendor/log-cache/src/cmd/syslog-server/Dockerfile
                  LABELS_FILE: labels/labels
              - put: syslog-server-image
                params:
                  image: syslog-server-image-tarball/image.tar

            - do:
              - task: build-cf-k8s-logging-image
                privileged: true
                output_mapping:
                  image: cf-k8s-logging-image-tarball
                config: *build-cf-k8s-logging-images
                params:
                  CONTEXT: cf-k8s-logging/vendor/cf-k8s-logging-fluent/fluentd
                  DOCKERFILE: cf-k8s-logging/vendor/cf-k8s-logging-fluent/fluentd/Dockerfile
                  LABELS_FILE: labels/labels
              - put: cf-k8s-logging-image
                params:
                  image: cf-k8s-logging-image-tarball/image.tar

          - task: update-image-refs
            config:
              platform: linux
              image_resource:
                type: registry-image
                source:
                  repository: cloudfoundry/cf-for-k8s-ci
              inputs:
              - name: cf-k8s-logging
              - name: log-cache-image
              - name: log-cache-gateway-image
              - name: log-cache-cf-auth-proxy-image
              - name: syslog-server-image
              - name: cf-k8s-logging-image
              outputs:
              - name: cf-k8s-logging-with-images
                path: cf-k8s-logging
              run:
                path: /bin/bash
                args:
                - -c
                - |
                  set -e
                  function image_ref() {
                    image_resource="$1"
                    image_repo="$(cat "${image_resource}/repository")"
                    image_digest="$(cat "${image_resource}/digest")"
                    echo "${image_repo}@${image_digest}"
                  }
                  pushd cf-k8s-logging
                    sed -i'' -e "s| log_cache:.*| log_cache: \"$(image_ref ../log-cache-image)\"|" config/values/images.yml
                    sed -i'' -e "s| log_cache_gateway:.*| log_cache_gateway: \"$(image_ref ../log-cache-gateway-image)\"|" config/values/images.yml
                    sed -i'' -e "s| cf_auth_proxy:.*| cf_auth_proxy: \"$(image_ref ../log-cache-cf-auth-proxy-image)\"|" config/values/images.yml
                    sed -i'' -e "s| syslog_server:.*| syslog_server: \"$(image_ref ../syslog-server-image)\"|" config/values/images.yml
                    sed -i'' -e "s| fluent:.*| fluent: \"$(image_ref ../cf-k8s-logging-image)\"|" config/values/images.yml
                    cat config/values/images.yml
                  popd > /dev/null

          - task: vendir-logging
            config:
              platform: linux
              image_resource:
                type: docker-image
                source: {repository: cloudfoundry/cf-for-k8s-ci}
              inputs:
                - name: cf-for-k8s-develop
                - name: cf-k8s-logging-with-images
              outputs:
              - name: cf-for-k8s-with-logging
                path: cf-for-k8s-develop
              run:
                path: /bin/bash
                args:
                - -ec
                - |
                  cd cf-k8s-logging-with-images
                  CF_FOR_K8s_DIR=../cf-for-k8s-develop ./scripts/bump-cf-for-k8s.sh

          - put: ready-pool
            params:
              acquire: true

          - do:
            - task: install-cf
              file: cf-for-k8s-ci/ci/tasks/install-cf-on-gke/task.yml
              input_mapping:
                pool-lock: ready-pool
                cf-for-k8s: cf-for-k8s-with-logging
              params:
                GCP_SERVICE_ACCOUNT_JSON: ((ci_k8s_gcp_service_account_json))
                GCP_PROJECT_NAME: ((ci_k8s_gcp_project_name))
                GCP_PROJECT_ZONE: ((ci_k8s_gcp_project_zone))
                DOMAIN: k8s-dev.relint.rocks

            - task: run-smoke-tests
              file: cf-for-k8s-ci/ci/tasks/run-smoke-tests/task.yml
              input_mapping:
                cf-for-k8s: cf-for-k8s-with-logging
              params:
                SMOKE_TEST_SKIP_SSL: false

            - task: run-logging-tests
              config:
                platform: linux
                image_resource:
                  type: docker-image
                  source: {repository: cloudfoundry/cf-for-k8s-ci}
                inputs:
                  - name: cf-k8s-logging
                  - name: env-metadata
                  - name: ready-pool
                run:
                  path: /bin/bash
                  args:
                  - -ec
                  - |
                    gcloud auth activate-service-account --key-file=<(echo '((ci_k8s_gcp_service_account_json))') --project='((ci_k8s_gcp_project_name))' 1>/dev/null 2>&1
                    gcloud container clusters get-credentials "$(cat ready-pool/name)" --zone '((ci_k8s_gcp_project_zone))' 1>/dev/null 2>&1

                    DNS_DOMAIN=$(cat env-metadata/dns-domain.txt)
                    export TEST_API_ENDPOINT="https://api.${DNS_DOMAIN}"
                    export TEST_USERNAME=admin
                    export TEST_PASSWORD=$(cat env-metadata/cf-admin-password.txt)
                    export TEST_SKIP_SSL=true
                    cf-k8s-logging/hack/run_integration_tests.sh

            - task: delete-cf
              file: cf-for-k8s-ci/ci/tasks/delete-cf/task.yml
              input_mapping:
                pool-lock: ready-pool
              params:
                GCP_PROJECT_NAME: ((ci_k8s_gcp_project_name))
                GCP_PROJECT_ZONE: ((ci_k8s_gcp_project_zone))
                GCP_SERVICE_ACCOUNT_JSON: ((ci_k8s_gcp_service_account_json))

            ensure:
              do:
              - put: destroy-pool
                params:
                  add: ready-pool

              - put: ready-pool
                params:
                  remove: ready-pool

        on_success:
          do:
          - put: cf-k8s-logging-pr
            params:
              path: cf-k8s-logging
              status: success
              context: tests
            get_params:
              integration_tool: checkout

        on_failure:
          do:
          - task: write-pr-check-failure-comment
            file: runtime-ci/tasks/write-pr-check-failure-comment/task.yml
            input_mapping:
              pull-request: cf-k8s-logging

          - put: cf-k8s-logging-pr
            params:
              path: cf-k8s-logging
              status: failure
              context: tests
              comment_file: pull-request-comment/comment
            get_params:
              integration_tool: checkout

  - name: run-tests-on-cf-for-k8s-main
    public: true
    plan:
    - get: cf-k8s-logging
      resource: cf-k8s-logging-main
      params:
        integration_tool: rebase
      trigger: true
      version: every

    - do: *test-cf-k8s

  - name: create-release
    public: true
    plan:
    - get: cf-k8s-logging
      resource: cf-k8s-logging-main
    - get: cf-k8s-logging-version

    - do: *test-cf-k8s

    - task: prepare-release
      config:
        platform: linux
        image_resource:
          type: docker-image
          source: {repository: cloudfoundry/cf-for-k8s-ci}
        inputs:
          - name: cf-k8s-logging-with-images
          - name: cf-k8s-logging-version
        outputs:
          - name: cf-k8s-logging-release
        run:
          path: /bin/bash
          args:
          - -ec
          - |
            pushd cf-k8s-logging-with-images
              cat ../cf-k8s-logging-version/version > ../cf-k8s-logging-release/name
              mkdir ../cf-k8s-logging-release/globs
              cp config/*.yml config/*.yaml config/values/*.yml ../cf-k8s-logging-release/globs/
              git rev-parse HEAD > ../cf-k8s-logging-release/commitish
            popd

    - put: cf-k8s-logging-github-release
      params:
        name: cf-k8s-logging-release/name
        tag: cf-k8s-logging-release/name
        globs:
        - cf-k8s-logging-release/globs/*
        commitish: cf-k8s-logging-release/commitish

    - put: cf-k8s-logging-version
      params:
        bump: minor
