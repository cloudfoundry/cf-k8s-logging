#@ load("@ytt:data", "data")

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: log-cache
  namespace: #@ data.values.system_namespace
  labels:
    app: log-cache
spec:
  replicas: #@ data.values.log_cache_replicas
  serviceName: log-cache
  selector:
    matchLabels:
      app: log-cache
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "6060"
        prometheus.io/path: "/metrics"
      labels:
        app: log-cache
    spec:
      containers:
      - name: syslog-server
        image: #@ data.values.images.syslog_server
        ports:
        - containerPort: 8082
        env:
        - name: LOG_CACHE_ADDR
          value: localhost:8080
        resources:
          limits:
            cpu: 500m
            memory: 200Mi
          requests:
            cpu: 200m
            memory: 100Mi
      - name: log-cache
        command:
          - bash
          - -c
          - |
            export NODE_INDEX=$(echo $HOSTNAME | grep -o '[0-9]\+');
            # update node_addrs
            NODE_ADDRS=""
            for i in $( seq 0 $((NUM_REPLICAS-1)) ); do
              node_addr="log-cache-${i}.log-cache.cf-system.svc.cluster.local:8080";
              NODE_ADDRS+=",${node_addr}";
            done;
            if [ $NODE_INDEX -ge $NUM_REPLICAS ]; then
              echo "Unexpected pod number $((NODE_INDEX+1)), only $NUM_REPLICAS pods expected. Shutting down..."
              echo "NUM_REPLICAS environment variable must be set to the number of log-cache pods."
              exit 1
            fi;

            export NODE_ADDRS="${NODE_ADDRS}";
            # end update node_addrs
            /srv/log-cache
        image: #@ data.values.images.log_cache
        resources:
          limits:
            cpu: 2
            memory: 3500Mi
          requests:
            cpu: 500m
            memory: 1500Mi
        env:
        - name: NUM_REPLICAS
          value: #@ "{x}".format(x=data.values.log_cache_replicas)
        - name: MEMORY_LIMIT_BYTES
          valueFrom:
            resourceFieldRef:
              containerName: log-cache
              resource: limits.memory
        - name: MEMORY_LIMIT_PERCENT
          value: "85"
        - name: MAX_PER_SOURCE
          value: "1000"
